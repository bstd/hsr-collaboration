// responsive rules
@mixin breakpoint($point) {
  @if $point == sm {
    @media only screen and (min-width: $screen-sm-min) {
       @content;
    }
  }

  @if $point == md {
    @media only screen and (min-width: $screen-md-min) {
      @content;
    }
  }

  @if $point == lg {
    @media only screen and (min-width: $screen-lg-min) {
      @content;
    }
  }
}

// animation
@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

// keyframe
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @-moz-keyframes #{$name} { @content; }
  @-ms-keyframes #{$name} { @content; }
  @-o-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

// gradient
@mixin linear-gradient($dir, $start-color, $end-color) {
  background: -webkit-linear-gradient($dir, $start-color 0%, $end-color 100%);
  background: -moz-linear-gradient($dir, $start-color 0%, $end-color 100%);
  background: -ms-linear-gradient($dir, $start-color 0%, $end-color 100%);
  background: -o-linear-gradient($dir, $start-color 0%, $end-color 100%);
  background: linear-gradient($dir, $start-color 0%, $end-color 100%);
}

// ellipsis
@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
